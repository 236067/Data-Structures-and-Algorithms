public class Leetcode_86 {

     public class ListNode {
          int val;
          ListNode next;
          ListNode() {}
          ListNode(int val) { this.val = val; }
          ListNode(int val, ListNode next) { this.val = val; this.next = next; }
     }
    class Solution {
        ListNode resule = new ListNode(-1);

        public ListNode partition(ListNode head, int x) {
            ListNode p=head;
            ListNode p1 = new ListNode(-1);
            ListNode l1=p1;
            ListNode p2 = new ListNode(-1);
            ListNode l2=p2;
            while (p != null) {
                if (p.val < x) {
                    l1.next = p;
                    l1 = l1.next;
                } else {
                    l2.next = p;
                    l2 = l2.next;
                }
                p = p.next;
            }
            l2.next=null;
            l1.next=p2.next;
            resule=p1;
            return resule.next;
        }

    }

}
